}
}
mp
}
map <- driveBC_map_major(1,1)
NA
driveBC_map_major <- function(days,region=NA){
start <- Sys.Date()-days
start_date <- paste('>',start,sep="")
url <- httr::modify_url('https://api.open511.gov.bc.ca/events')
if (is.na(region)==F){
area <- paste('drivebc.ca/',region,sep="")
resp <- httr::GET(url,query=list(severity='MAGOR',status='ALL',created=start_date,limit=10000,area_id=area))
} else {
resp <- httr::GET(url,query=list(severity='MAGOR',status='ALL',created=start_date,limit=10000))
}
if (httr::http_type(resp) != "application/json") {
stop("API did not return json", call. = FALSE)
}
if (http_error(resp)){
stop(paste("Invalid url, please revisit parameters \n",resp$url), call. = FALSE)
}
http_status(resp)
parsed <- jsonlite::fromJSON(content(resp, "text",encoding = 'UTF-8'))
df <- data.frame(parsed$events)
colnames(df)
df$areas <- as.character(lapply(df$areas,'[[',2))
df$day <- as.Date(strftime(df$created,format='%F'))
df <- df%>%select(day,id,status,event_type,areas,geography,description)
icon.fa <- makeAwesomeIcon(icon = 'flag', markerColor = 'red', library='fa', iconColor = 'black')
mp <- leaflet()
mp <- addTiles(mp)
for (i in seq(1,length(df$geography$coordinates))){
if(df$geography$type[i]=='LineString'&df$status[i]=='ACTIVE'){
mp <- addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'red' )
}
if (df$geography$type[i]=='LineString'&df$status[i]=='ARCHIVED'){
mp <- addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'blue' )
}
if(df$geography$type[i]=='Point'&df$status[i]=='ACTIVE'){
mp <- addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i],icon=icon.fa)
}
if(df$geography$type[i]=='Point'&df$status[i]=='ARCHIVED'){
mp <- addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i])
}
}
mp
}
map <- driveBC_map_major(1,1)
driveBC_map_major <- function(days,region=NA){
start <- Sys.Date()-days
start_date <- paste('>',start,sep="")
url <- httr::modify_url('https://api.open511.gov.bc.ca/events')
if (is.na(region)==F){
area <- paste('drivebc.ca/',region,sep="")
resp <- httr::GET(url,query=list(severity='MAGOR',status='ALL',created=start_date,limit=10000,area_id=area))
} else {
resp <- httr::GET(url,query=list(severity='MAGOR',status='ALL',created=start_date,limit=10000))
}
if (httr::http_type(resp) != "application/json") {
stop("API did not return json", call. = FALSE)
}
if (httr::http_error(resp)){
stop(paste("Invalid url, please revisit parameters \n",resp$url), call. = FALSE)
}
parsed <- jsonlite::fromJSON(content(resp, "text",encoding = 'UTF-8'))
df <- data.frame(parsed$events)
df$areas <- as.character(lapply(df$areas,'[[',2))
df$day <- as.Date(strftime(df$created,format='%F'))
df <- df%>%select(day,id,status,event_type,areas,geography,description)
icon.fa <- makeAwesomeIcon(icon = 'flag', markerColor = 'red', library='fa', iconColor = 'black')
mp <- leaflet()
mp <- addTiles(mp)
for (i in seq(1,length(df$geography$coordinates))){
if(df$geography$type[i]=='LineString'&df$status[i]=='ACTIVE'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'red' )
}
if (df$geography$type[i]=='LineString'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'blue' )
}
if(df$geography$type[i]=='Point'&df$status[i]=='ACTIVE'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i],icon=icon.fa)
}
if(df$geography$type[i]=='Point'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i])
}
}
mp
}
map <- driveBC_map_major(1,1)
driveBC_map_major <- function(days,region=NA){
start <- Sys.Date()-days
start_date <- paste('>',start,sep="")
url <- httr::modify_url('https://api.open511.gov.bc.ca/events')
if (is.na(region)==F){
area <- paste('drivebc.ca/',region,sep="")
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000,area_id=area))
} else {
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000))
}
if (httr::http_type(resp) != "application/json") {
stop("API did not return json", call. = FALSE)
}
if (httr::http_error(resp)){
stop(paste("Invalid url, please revisit parameters \n",resp$url), call. = FALSE)
}
parsed <- jsonlite::fromJSON(content(resp, "text",encoding = 'UTF-8'))
df <- data.frame(parsed$events)
df$areas <- as.character(lapply(df$areas,'[[',2))
df$day <- as.Date(strftime(df$created,format='%F'))
df <- df%>%select(day,id,status,event_type,areas,geography,description)
icon.fa <- makeAwesomeIcon(icon = 'flag', markerColor = 'red', library='fa', iconColor = 'black')
mp <- leaflet()
mp <- addTiles(mp)
for (i in seq(1,length(df$geography$coordinates))){
if(df$geography$type[i]=='LineString'&df$status[i]=='ACTIVE'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'red' )
}
if (df$geography$type[i]=='LineString'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'blue' )
}
if(df$geography$type[i]=='Point'&df$status[i]=='ACTIVE'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i],icon=icon.fa)
}
if(df$geography$type[i]=='Point'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i])
}
}
mp
}
map <- driveBC_map_major(1,1)
driveBC_map_major <- function(days,region=NA){
start <- Sys.Date()-days
start_date <- paste('>',start,sep="")
url <- httr::modify_url('https://api.open511.gov.bc.ca/events')
if (is.na(region)==F){
area <- paste('drivebc.ca/',region,sep="")
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000,area_id=area))
} else {
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000))
}
if (httr::http_type(resp) != "application/json") {
stop("API did not return json", call. = FALSE)
}
if (httr::http_error(resp)){
stop(paste("Invalid url, please revisit parameters \n",resp$url), call. = FALSE)
}
parsed <- jsonlite::fromJSON(jsonlite::content(resp, "text",encoding = 'UTF-8'))
df <- data.frame(parsed$events)
df$areas <- as.character(lapply(df$areas,'[[',2))
df$day <- as.Date(strftime(df$created,format='%F'))
df <- df%>%select(day,id,status,event_type,areas,geography,description)
icon.fa <- makeAwesomeIcon(icon = 'flag', markerColor = 'red', library='fa', iconColor = 'black')
mp <- leaflet()
mp <- addTiles(mp)
for (i in seq(1,length(df$geography$coordinates))){
if(df$geography$type[i]=='LineString'&df$status[i]=='ACTIVE'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'red' )
}
if (df$geography$type[i]=='LineString'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'blue' )
}
if(df$geography$type[i]=='Point'&df$status[i]=='ACTIVE'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i],icon=icon.fa)
}
if(df$geography$type[i]=='Point'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i])
}
}
mp
}
map <- driveBC_map_major(1,1)
library(httr)
library(jsonlite)
?content
driveBC_map_major <- function(days,region=NA){
start <- Sys.Date()-days
start_date <- paste('>',start,sep="")
url <- httr::modify_url('https://api.open511.gov.bc.ca/events')
if (is.na(region)==F){
area <- paste('drivebc.ca/',region,sep="")
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000,area_id=area))
} else {
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000))
}
if (httr::http_type(resp) != "application/json") {
stop("API did not return json", call. = FALSE)
}
if (httr::http_error(resp)){
stop(paste("Invalid url, please revisit parameters \n",resp$url), call. = FALSE)
}
parsed <- jsonlite::fromJSON(httr::content(resp, "text",encoding = 'UTF-8'))
df <- data.frame(parsed$events)
df$areas <- as.character(lapply(df$areas,'[[',2))
df$day <- as.Date(strftime(df$created,format='%F'))
df <- df%>%select(day,id,status,event_type,areas,geography,description)
icon.fa <- makeAwesomeIcon(icon = 'flag', markerColor = 'red', library='fa', iconColor = 'black')
mp <- leaflet()
mp <- addTiles(mp)
for (i in seq(1,length(df$geography$coordinates))){
if(df$geography$type[i]=='LineString'&df$status[i]=='ACTIVE'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'red' )
}
if (df$geography$type[i]=='LineString'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'blue' )
}
if(df$geography$type[i]=='Point'&df$status[i]=='ACTIVE'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i],icon=icon.fa)
}
if(df$geography$type[i]=='Point'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i])
}
}
mp
}
map <- driveBC_map_major(1,1)
driveBC_map_major <- function(days,region=NA){
start <- Sys.Date()-days
start_date <- paste('>',start,sep="")
url <- httr::modify_url('https://api.open511.gov.bc.ca/events')
if (is.na(region)==F){
area <- paste('drivebc.ca/',region,sep="")
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000,area_id=area))
} else {
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000))
}
if (httr::http_type(resp) != "application/json") {
stop("API did not return json", call. = FALSE)
}
if (httr::http_error(resp)){
stop(paste("Invalid url, please revisit parameters \n",resp$url), call. = FALSE)
}
parsed <- jsonlite::fromJSON(httr::content(resp, "text",encoding = 'UTF-8'))
df <- data.frame(parsed$events)
df$areas <- as.character(lapply(df$areas,'[[',2))
df$day <- as.Date(strftime(df$created,format='%F'))
icon.fa <- makeAwesomeIcon(icon = 'flag', markerColor = 'red', library='fa', iconColor = 'black')
mp <- leaflet()
mp <- addTiles(mp)
for (i in seq(1,length(df$geography$coordinates))){
if(df$geography$type[i]=='LineString'&df$status[i]=='ACTIVE'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'red' )
}
if (df$geography$type[i]=='LineString'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'blue' )
}
if(df$geography$type[i]=='Point'&df$status[i]=='ACTIVE'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i],icon=icon.fa)
}
if(df$geography$type[i]=='Point'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i])
}
}
mp
}
map <- driveBC_map_major(1,1)
icon.fa <- leaflet::makeAwesomeIcon(icon = 'flag', markerColor = 'red', library='fa', iconColor = 'black')
driveBC_map_major <- function(days,region=NA){
start <- Sys.Date()-days
start_date <- paste('>',start,sep="")
url <- httr::modify_url('https://api.open511.gov.bc.ca/events')
if (is.na(region)==F){
area <- paste('drivebc.ca/',region,sep="")
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000,area_id=area))
} else {
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000))
}
if (httr::http_type(resp) != "application/json") {
stop("API did not return json", call. = FALSE)
}
if (httr::http_error(resp)){
stop(paste("Invalid url, please revisit parameters \n",resp$url), call. = FALSE)
}
parsed <- jsonlite::fromJSON(httr::content(resp, "text",encoding = 'UTF-8'))
df <- data.frame(parsed$events)
df$areas <- as.character(lapply(df$areas,'[[',2))
df$day <- as.Date(strftime(df$created,format='%F'))
icon.fa <- leaflet::makeAwesomeIcon(icon = 'flag', markerColor = 'red', library='fa', iconColor = 'black')
mp <- leaflet()
mp <- addTiles(mp)
for (i in seq(1,length(df$geography$coordinates))){
if(df$geography$type[i]=='LineString'&df$status[i]=='ACTIVE'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'red' )
}
if (df$geography$type[i]=='LineString'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'blue' )
}
if(df$geography$type[i]=='Point'&df$status[i]=='ACTIVE'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i],icon=icon.fa)
}
if(df$geography$type[i]=='Point'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i])
}
}
mp
}
map <- driveBC_map_major(1,1)
library(leaflet)
driveBC_map_major <- function(days,region=NA){
start <- Sys.Date()-days
start_date <- paste('>',start,sep="")
url <- httr::modify_url('https://api.open511.gov.bc.ca/events')
if (is.na(region)==F){
area <- paste('drivebc.ca/',region,sep="")
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000,area_id=area))
} else {
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000))
}
if (httr::http_type(resp) != "application/json") {
stop("API did not return json", call. = FALSE)
}
if (httr::http_error(resp)){
stop(paste("Invalid url, please revisit parameters \n",resp$url), call. = FALSE)
}
parsed <- jsonlite::fromJSON(httr::content(resp, "text",encoding = 'UTF-8'))
df <- data.frame(parsed$events)
df$areas <- as.character(lapply(df$areas,'[[',2))
df$day <- as.Date(strftime(df$created,format='%F'))
icon.fa <- leaflet::makeAwesomeIcon(icon = 'flag', markerColor = 'red', library='fa', iconColor = 'black')
mp <- leaflet::leaflet()
mp <- leaflet::addTiles(mp)
for (i in seq(1,length(df$geography$coordinates))){
if(df$geography$type[i]=='LineString'&df$status[i]=='ACTIVE'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'red' )
}
if (df$geography$type[i]=='LineString'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'blue' )
}
if(df$geography$type[i]=='Point'&df$status[i]=='ACTIVE'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i],icon=icon.fa)
}
if(df$geography$type[i]=='Point'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i])
}
}
mp
}
map <- driveBC_map_major(1,1)
map
driveBC_map_major <- function(days,region=NA){
start <- Sys.Date()-days
start_date <- paste('>',start,sep="")
url <- httr::modify_url('https://api.open511.gov.bc.ca/events')
if (is.na(region)==F){
area <- paste('drivebc.ca/',region,sep="")
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000,area_id=area))
} else {
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000))
}
if (httr::http_type(resp) != "application/json") {
stop("API did not return json", call. = FALSE)
}
if (httr::http_error(resp)){
stop(paste("Invalid url, please revisit parameters \n",resp$url), call. = FALSE)
}
parsed <- jsonlite::fromJSON(httr::content(resp, "text",encoding = 'UTF-8'))
df <- data.frame(parsed$events)
df$areas <- as.character(lapply(df$areas,'[[',2))
df$day <- as.Date(strftime(df$created,format='%F'))
icon.fa <- leaflet::makeAwesomeIcon(icon = 'flag', markerColor = 'red', library='fa', iconColor = 'black')
mp <- leaflet::leaflet()
mp <- leaflet::addTiles(mp)
for (i in seq(1,length(df$geography$coordinates))){
if(df$geography$type[i]=='LineString'&df$status[i]=='ACTIVE'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'red' )
}
if (df$geography$type[i]=='LineString'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],df$geography$coordinates[i][[1]][,2],popup = df$description[i],color = 'blue' )
}
if(df$geography$type[i]=='Point'&df$status[i]=='ACTIVE'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i],icon=icon.fa)
}
if(df$geography$type[i]=='Point'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],df$geography$coordinates[i][[1]][2],popup = df$description[i])
}
}
mp
}
map <- driveBC_map_major(1,1)
map
map <- driveBC_map_major(1)
map
devtool::document()
devtools::document()
devtools::document()
devtools::load_all(".")
?driveBC_map_major
library(AntWeb)
?aw_map
?driveBC_map_major
?aw_map
?driveBC_map_major
?driveBC_map_major
devtools::document()
?driveBC_map_major
devtools::document()
?driveBC_map_major
devtools::document()
?driveBC_map_major
map <- driveBC_map_major(1)
map
driveBC_map_major <- function(days,region=NA){
start <- Sys.Date()-days
start_date <- paste('>',start,sep="")
url <- httr::modify_url('https://api.open511.gov.bc.ca/events')
if (is.na(region)==F){
area <- paste('drivebc.ca/',region,sep="")
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000,area_id=area))
} else {
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000))
}
if (httr::http_type(resp) != "application/json") {
stop("API did not return json", call. = FALSE)
}
if (httr::http_error(resp)){
stop(paste("Invalid url, please revisit parameters \n",resp$url), call. = FALSE)
}
parsed <- jsonlite::fromJSON(httr::content(resp, "text",encoding = 'UTF-8'))
df <- data.frame(parsed$events)
df$areas <- as.character(lapply(df$areas,'[[',2))
df$day <- as.Date(strftime(df$created,format='%F'))
icon.fa <- leaflet::makeAwesomeIcon(icon = 'flag', markerColor = 'red', library='fa', iconColor = 'black')
mp <- leaflet::leaflet()
mp <- leaflet::addTiles(mp)
for (i in seq(1,length(df$geography$coordinates))){
if(df$geography$type[i]=='LineString'&df$status[i]=='ACTIVE'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],
df$geography$coordinates[i][[1]][,2],
popup = df$description[i],color = 'red' )
}
if (df$geography$type[i]=='LineString'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],
df$geography$coordinates[i][[1]][,2],
popup = df$description[i],color = 'blue' )
}
if(df$geography$type[i]=='Point'&df$status[i]=='ACTIVE'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],
df$geography$coordinates[i][[1]][2],
popup = df$description[i],icon=icon.fa)
}
if(df$geography$type[i]=='Point'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],
df$geography$coordinates[i][[1]][2],
popup = df$description[i])
}
}
mp
}
map <- driveBC_map_major(1)
map
driveBC_map_major <- function(days,region=NA){
start <- Sys.Date()-days
start_date <- paste('>',start,sep="")
url <- httr::modify_url('https://api.open511.gov.bc.ca/events')
if (is.na(region)==F){
area <- paste('drivebc.ca/',region,sep="")
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000,area_id=area))
} else {
resp <- httr::GET(url,query=list(severity='MAJOR',status='ALL',created=start_date,limit=10000))
}
if (httr::http_type(resp) != "application/json") {
stop("API did not return json", call. = FALSE)
}
if (httr::http_error(resp)){
stop(paste("Invalid url, please revisit parameters \n",resp$url), call. = FALSE)
}
parsed <- jsonlite::fromJSON(httr::content(resp, "text",encoding = 'UTF-8'))
df <- data.frame(parsed$events)
df$areas <- as.character(lapply(df$areas,'[[',2))
df$day <- as.Date(strftime(df$created,format='%F'))
icon.fa <- leaflet::makeAwesomeIcon(icon = 'flag', markerColor = 'red', library='fa', iconColor = 'black')
mp <- leaflet::leaflet()
mp <- leaflet::addTiles(mp)
for (i in seq(1,length(df$geography$coordinates))){
if(df$geography$type[i]=='LineString'&df$status[i]=='ACTIVE'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],
df$geography$coordinates[i][[1]][,2],
popup = df$description[i],color = 'red' )
}
if (df$geography$type[i]=='LineString'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addPolylines(mp,df$geography$coordinates[i][[1]][,1],
df$geography$coordinates[i][[1]][,2],
popup = df$description[i],color = 'blue' )
}
if(df$geography$type[i]=='Point'&df$status[i]=='ACTIVE'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],
df$geography$coordinates[i][[1]][2],
popup = df$description[i],icon=icon.fa)
}
if(df$geography$type[i]=='Point'&df$status[i]=='ARCHIVED'){
mp <- leaflet::addAwesomeMarkers(mp,df$geography$coordinates[i][[1]][1],
df$geography$coordinates[i][[1]][2],
popup = df$description[i])
}
}
mp
}
map <- driveBC_map_major(1)
map
?driveBC_map_major
devtools::load_all(".")
?driveBC_map_major
devtools::document()
?driveBC_map_major
map <- driveBC_map_major(1)
map
devtools::load_all(".")
map <- driveBC_map_major(1,1)
View(map)
map
map <- driveBC_map_major(1)
map
